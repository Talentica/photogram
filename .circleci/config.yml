# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: true
          CODECOV_TOKEN: "a4d0864f-4e76-46f2-93f5-1f93793c233c"

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/photogram


    steps:
      - checkout

      # Download and cache dependencies
      # - restore_cache:
      #    key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: codecov dep
          command: |
             sudo pip install codecov

          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install


      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            # mkdir configs
            #touch configs/email_pwd
            mkdir test-results
            mkdir test-reports
            cd src/
            pip install --upgrade pipenv
            pipenv run python manage.py test
            pipenv run coverage run --source='.' manage.py test

         name: post test
         command: |
            codecov

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-reports
          destination: test-reports
